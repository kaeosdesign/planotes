// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Enums

enum SessionDuration {
  EPHEMERAL
  PERSISTENT
}

enum ItemType {
  RECURRING
  ONE_TIME
}

enum ItemStatus {
  AVAILABLE
  UNAVAILABLE
}

enum Entity {
  ITEM
  TASK
  GOAL
}

enum TASK_STATUS {
  TO_DO
  IN_PROGRESS
  COMPLETED
}

enum Size {
  XS
  S
  M
  L
  XL
}

// Models

model User {
  id           String         @id @default(cuid())
  email        String         @unique
  magicLinks   MagicLink[]
  name         String?
  avatarSeed   String?
  timezone     String?
  balance      Int            @default(0)
  Item         Item[]
  BalanceEntry BalanceEntry[]
  Task         Task[]
  Goal         Goal[]
}

model MagicLink {
  id              String          @id @default(cuid())
  token           String
  validUntil      Int
  sessionDuration SessionDuration
  user            User            @relation(fields: [userId], references: [id])
  userId          String
}

model Item {
  id      String     @id @default(cuid())
  name    String
  iconUrl String?
  type    ItemType
  price   Int
  status  ItemStatus @default(AVAILABLE)
  user    User       @relation(fields: [userId], references: [id])
  userId  String
}

model BalanceEntry {
  id        String @id @default(cuid())
  change    Int
  createdAt Int
  itemId    String
  entity    Entity
  user      User   @relation(fields: [userId], references: [id])
  userId    String
}

model Task {
  id          String      @id @default(cuid())
  title       String
  description String
  status      TASK_STATUS @default(TO_DO)
  size        Size
  goal        Goal?       @relation(fields: [goalId], references: [id])
  goalId      String?
  user        User        @relation(fields: [userId], references: [id])
  userId      String
}

model Goal {
  id          String @id @default(cuid())
  title       String
  description String
  size        Size
  Task        Task[]
  user        User   @relation(fields: [userId], references: [id])
  userId      String
}
